/*******************************************************************************
 * Copyright 2012 The MITRE Corporation
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package org.mitre.oauth2.model;

import java.util.UUID;

import org.apache.commons.codec.binary.Base64;
import org.mitre.oauth2.model.ClientDetailsEntity.ClientDetailsEntityBuilder;
import org.springframework.stereotype.Service;

/**
 * A factory for making OAuth2 clients with autogenerated IDs and secrets (as desired)
 * @author jricher
 *
 */
@Service
public class ClientGeneratorFactory implements ClientDetailsEntityFactory {

	@Override
	public ClientDetailsEntity createClient(String clientId, String clientSecret) {
		ClientDetailsEntityBuilder builder = ClientDetailsEntity.makeBuilder();
		if (clientId == null) {
			clientId = UUID.randomUUID().toString();
		}
		builder.setClientId(clientId);
		if (clientSecret == null) {
			clientSecret = Base64.encodeBase64((UUID.randomUUID().toString() + UUID.randomUUID().toString()).getBytes()).toString();
		}
		builder.setClientSecret(clientSecret);
		
		return builder.finish();
	}

}
