<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jwt-signer="http://www.mitre.org/schema/openid-connect/jwt-signer"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.mitre.org/schema/openid-connect/jwt-signer http://www.mitre.org/schema/openid-connect/jwt-signer/jwt-signer-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<import resource="data-context.xml" />	

	<security:global-method-security pre-post-annotations="enabled" proxy-target-class="true" authentication-manager-ref="springSecurityAuthenticationManager"/>
	<security:http use-expressions="true" auto-config="true" authentication-manager-ref="springSecurityAuthenticationManager">
<!-- 		<security:intercept-url pattern="/oauth/user/**" access="hasRole('ROLE_USER')"/> -->
		<security:intercept-url pattern="/*" access="permitAll"/>
		
	</security:http>
		
	<bean id="clientCredentialsChecker" class="org.springframework.security.oauth2.provider.ClientCredentialsChecker">
		<constructor-arg>
			<bean class="org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService"/>
		</constructor-arg>
	</bean>	
		
	<!-- Authorization Code Service, used by TokenGranter -->
<!-- 	<bean id="jdbcAuthCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices"> -->
<!-- 		<constructor-arg> -->
<!-- 			<ref bean="dataSource"/> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean> -->

	

	<bean id="authCodeServices" class="org.springframework.security.oauth2.provider.code.InMemoryAuthorizationCodeServices"/>

	<security:authentication-manager id="springSecurityAuthenticationManager">
		<security:authentication-provider>
			<security:user-service id="userDetailsService">
		    	<security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
		    	<security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
		  	</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>	
		
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
		<property name="databasePlatform" value="org.eclipse.persistence.platform.database.MySQLPlatform" />
		<property name="showSql" value="true" />
	</bean>

	<!-- Map our custom exception classes to named views -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	   <property name="exceptionMappings">
	     <props>
	     </props>
	   </property>
	</bean>
 
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="openidPersistenceUnit" />
		<property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.weaving" value="false" />
				<entry key="eclipselink.logging.level" value="FINEST" />
				<entry key="eclipselink.logging.level.sql" value="FINEST" />
			</map>
		</property>
	</bean>

	<!-- TODO: working remove red X's see: http://forum.springsource.org/showthread.php?123193-STS-not-respecting-META-INF-spring-schemas-for-validation&p=401926#post401926 -->

	<jwt-signer:keystore id="defaultKeystore" location="classpath:keystore.jks" password="changeit" />

	<jwt-signer:service id="defaultSignerService">
		<jwt-signer:rsa bits="256" keystore-ref="defaultKeystore" key-alias="rsa" password="changeit" /> 
		<jwt-signer:hmac bits="256" passphrase="changeit" />		
	</jwt-signer:service>
	 
	<!-- scheduled tasks -->
<!-- 	<task:scheduler id="taskScheduler" pool-size="10" /> -->
<!-- 	<task:executor id="taskExecutor" pool-size="5" /> -->
<!-- 	<task:annotation-driven scheduler="taskScheduler" executor="taskExecutor" /> -->
	
	<!-- load everything except controllers (those get handled elsewhere) -->
    <context:component-scan annotation-config="true" base-package="org.mitre">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    
</beans>
