<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<security:global-method-security pre-post-annotations="enabled" proxy-target-class="true"/>

	<security:http use-expressions="true" auto-config="true">
<!-- 		<security:intercept-url pattern="/oauth/user/**" access="hasRole('ROLE_USER')"/> -->
		<security:intercept-url pattern="/*" access="permitAll"/>
		
	</security:http>
	
	<!-- Authorization Code Service, used by TokenGranter -->
	<bean id="jdbcAuthCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<constructor-arg>
			<bean class="org.apache.commons.dbcp.BasicDataSource"/>
		</constructor-arg>
	</bean>
	
	<bean id="clientCredentialsChecker" class="org.springframework.security.oauth2.provider.ClientCredentialsChecker">
		<constructor-arg>
			<bean class="org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService"/>
		</constructor-arg>
	</bean>
	
	<!-- SECOAUTH Authorization Server, with our custom token granter plugged in -->
	<oauth2:authorization-server client-details-service-ref="defaultOAuth2ClientDetailsEntityService" 
		token-services-ref="defaultOAuth2ProviderTokenService" token-granter-ref="connectAuthCodeTokenGranter"
		authorization-endpoint-url="/openidconnect/auth">
		<oauth2:authorization-code />
	</oauth2:authorization-server>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service id="userDetailsService">
		    	<security:user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
		    	<security:user name="bob" password="bobspassword" authorities="ROLE_USER" />
		  	</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
